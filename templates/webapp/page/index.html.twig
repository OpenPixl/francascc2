{% extends 'admin.html.twig' %}

{% block title %}OpenGaia | Administration - site{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        window.onload = function(){
            // Construction de la fonction OnClickBtnMenu
            function onClickBtnMenu(event){
                event.preventDefault();
                const url = this.href;                                          // variable qui récupère l'url inclus dans le "this"
                const icone = this.querySelector('i');                          // variable qui sélectionne l'élément balise <i></i>
                axios
                    .get(url)
                    .then(function(response) {
                        if(icone.classList.contains('fa-check-circle')) {
                            icone.classList.replace('fa-check-circle', 'fa-times-circle');
                            icone.classList.replace('text-success', 'text-danger');
                        }
                        else {
                            icone.classList.replace('fa-times-circle', 'fa-check-circle');
                            icone.classList.replace('text-danger', 'text-success');
                        };
                    });
            }

            function onClickBtnPublish(event){
                event.preventDefault();
                const url2 = this.href;                                          // variable qui récupère l'url inclus dans le "this"
                const icone2 = this.querySelector('i');
                axios
                    .get(url2)
                    .then(function(response){
                        if(icone2.classList.contains('fa-check-circle')) {
                            icone2.classList.replace('fa-check-circle', 'fa-times-circle');
                            icone2.classList.replace('text-success', 'text-danger');
                        }
                        else {
                            icone2.classList.replace('fa-times-circle', 'fa-check-circle');
                            icone2.classList.replace('text-danger', 'text-success');
                        };
                    });
            }

            function onClickBtnUp(event){
                event.preventDefault();
                const url = this.href;
                axios
                    .get(url)
                    .then(function(response){
                        const liste = document.getElementById('liste').innerHTML = response.data.liste;
                        // on réinitie les Events
                        document.querySelectorAll('a.jsUp').forEach(function (link){
                            link.addEventListener('click', onClickBtnUp);
                        })
                        document.querySelectorAll('a.jsDown').forEach(function (link){
                            link.addEventListener('click', onClickBtnDown);
                        })
                        // préparation du toaster
                        var option = {
                            animation : true,
                            autohide: true,
                            delay : 3000,
                        };
                        // initialisation du toaster
                        var toastHTMLElement = document.getElementById("toaster");
                        var message = response.data.message;
                        var toastBody = toastHTMLElement.querySelector('.toast-body') // selection de l'élément possédant le message
                        toastBody.textContent = message;
                        var toastElement = new bootstrap.Toast(toastHTMLElement, option);
                        toastElement.show();
                    })
            }

            function onClickBtnDown(event){
                //event.preventDefault();
                const url = this.href;
                axios
                    .get(url)
                    .then(function(response){
                        const liste = document.getElementById('liste').innerHTML = response.data.liste;
                        // on réinitie les Events
                        document.querySelectorAll('a.jsUp').forEach(function (link){
                            link.addEventListener('click', onClickBtnUp);
                        })
                        document.querySelectorAll('a.jsDown').forEach(function (link){
                            link.addEventListener('click', onClickBtnDown);
                        })
                        // préparation du toaster
                        var option = {
                            animation : true,
                            autohide: true,
                            delay : 3000,
                        };
                        // initialisation du toaster
                        var toastHTMLElement = document.getElementById("toaster");
                        var message = response.data.message;
                        var toastBody = toastHTMLElement.querySelector('.toast-body') // selection de l'élément possédant le message
                        toastBody.textContent = message;
                        var toastElement = new bootstrap.Toast(toastHTMLElement, option);
                        toastElement.show();
                    })
            }

            function onClickBtnPosition(event)
            {
                event.preventDefault();
                const id = this.id;
                const icone = this.querySelector('i');
                let level;
                if(icone.classList.contains('fa-long-arrow-alt-up')) {
                    level = 'up';
                }else{
                    level = 'down';
                }
                const url = '/webapp/page/position/' + id + '/' + level;
                axios
                    .get(url)
                    .then(function(response){
                        const liste = document.getElementById('liste').innerHTML = response.data.liste;
                        // on réinitie les Events
                        // on réinitie les différents appel d'events
                        document.querySelectorAll('a.jsPosition').forEach(function (link){
                            link.addEventListener('click', onClickBtnPosition);
                        })
                        document.querySelectorAll('a.js-data-suppr').forEach(function(link){
                            link.addEventListener('click', onClickDelEvent)
                        })
                        // préparation du toaster
                        var option = {
                            animation : true,
                            autohide: true,
                            delay : 3000,
                        };
                        // initialisation du toaster
                        var toastHTMLElement = document.getElementById("toaster");
                        var message = response.data.message;
                        var toastBody = toastHTMLElement.querySelector('.toast-body') // selection de l'élément possédant le message
                        toastBody.textContent = message;
                        var toastElement = new bootstrap.Toast(toastHTMLElement, option);
                        toastElement.show();
                    })
            }

            // Code d'ouverture de la modale de suppression d'une ligne
            var Suppr = document.getElementById('Suppr')
            Suppr.addEventListener('show.bs.modal', function (event) {
                // Button that triggered the modal
                var a = event.relatedTarget
                // Extract info from data-bs-* attributes
                var recipient = a.getAttribute('data-bs-whatever')
                // If necessary, you could initiate an AJAX request here
                // and then do the updating in a callback.
                //
                // Update the modal's content.
                var modalTitle = Suppr.querySelector('.modal-title')
                var modalText = Suppr.querySelector('.modal-text')
                var modalBodyInput = Suppr.querySelector('.modal-body input')

                modalTitle.textContent = "Suppression d'une recommandation"
                modalBodyInput.value = recipient
                modalText.innerHTML = "Vous êtes sur le point de supprimer la page sélectionnée.<br><b>Etes-vous sur de continuer ?</b>"
            })

            // Code de suppression lors du clic sur le bouton de la modal "Suppr"
            function onClickDelEvent(event){
                //event.preventDefault()
                const id = document.getElementById('recipient-name').value
                axios
                    .post('/webapp/page/del/'+ id)
                    .then(function(response)
                    {
                        // rafraichissement du tableau
                        const liste = document.getElementById('liste').innerHTML = response.data.liste;

                        // on réinitie les différents appel d'events
                        document.querySelectorAll('a.jsPosition').forEach(function (link){
                            link.addEventListener('click', onClickBtnPosition);
                        })
                        document.querySelectorAll('a.js-data-suppr').forEach(function(link){
                            link.addEventListener('click', onClickDelEvent)
                        })

                        // préparation du toaster
                        var option = {
                            animation : true,
                            autohide: true,
                            delay : 3000,
                        };
                        // initialisation du toaster
                        var toastHTMLElement = document.getElementById("toaster");
                        var message = response.data.message;
                        var toastBody = toastHTMLElement.querySelector('.toast-body') // selection de l'élément possédant le message
                        toastBody.textContent = message;
                        var toastElement = new bootstrap.Toast(toastHTMLElement, option);
                        toastElement.show();
                    })
                    .catch(function(error){
                        console.log(error);
                    })
            }

            // Appel de la fonction lors du clic sur le bouton Ismenu
            document.querySelectorAll('a.js-menu').forEach(function (link){
                link.addEventListener('click', onClickBtnMenu);
            })

            // Appel de la fonction lors du clic sur le bouton IsPublish
            document.querySelectorAll('a.js-publish').forEach(function (link){
                link.addEventListener('click', onClickBtnPublish);
            })

            // Appel de la fonction lors du clic sur la flèche DOWN
            document.querySelectorAll('a.jsPosition').forEach(function (link){
                link.addEventListener('click', onClickBtnPosition);
            })

            // Ajout d'un event sur Bouton de suppression dans la fenêtre modale
            document.querySelectorAll('a.js-data-suppr').forEach(function(link){
                link.addEventListener('click', onClickDelEvent)
            })
        }
    </script>

{% endblock %}

{% block content %}
    <div class="container-fluid">
        {{ include('webapp/page/include/_section_content_header.html.twig') }}
        <section id="op_admin_content_body">
            <div class="row g-2">
                <div class="col-2">
                    {% if not pages%}
                        {% include 'webapp/page/include/_section_content_aside.html.twig' %}
                    {% else %}
                        {% include 'webapp/page/include/_section_content_aside.html.twig' with pages %}
                    {% endif %}
                </div>
                <div class="col-10">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h4>Liste des pages du site</h4>
                                    <p>Créer, Modifier ou supprimer des pages du site.</p>
                                </div>
                                <div id="op_actions">
                                    <button class="btn btn-sm btn-outline-secondary">Supprimer</button>
                                </div>
                            </div>
                            <div id="liste">
                                {% include 'webapp/page/include/_liste.html.twig' %}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
{% endblock %}

